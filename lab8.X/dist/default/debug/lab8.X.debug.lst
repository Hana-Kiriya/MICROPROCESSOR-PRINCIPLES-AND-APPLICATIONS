

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Nov 28 09:23:33 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 25/07/2024 GMT
    19                           ; 
    20                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000FE0                     bsr             equ	4064
    53   000FE9                     fsr0            equ	4073
    54   000FEA                     fsr0h           equ	4074
    55   000FE9                     fsr0l           equ	4073
    56   000FE1                     fsr1            equ	4065
    57   000FE2                     fsr1h           equ	4066
    58   000FE1                     fsr1l           equ	4065
    59   000FD9                     fsr2            equ	4057
    60   000FDA                     fsr2h           equ	4058
    61   000FD9                     fsr2l           equ	4057
    62   000FEF                     indf0           equ	4079
    63   000FE7                     indf1           equ	4071
    64   000FDF                     indf2           equ	4063
    65   000FF2                     intcon          equ	4082
    66   000000                     nvmcon          equ	0
    67   000FF9                     pcl             equ	4089
    68   000FFA                     pclath          equ	4090
    69   000FFB                     pclatu          equ	4091
    70   000FEB                     plusw0          equ	4075
    71   000FE3                     plusw1          equ	4067
    72   000FDB                     plusw2          equ	4059
    73   000FED                     postdec0        equ	4077
    74   000FE5                     postdec1        equ	4069
    75   000FDD                     postdec2        equ	4061
    76   000FEE                     postinc0        equ	4078
    77   000FE6                     postinc1        equ	4070
    78   000FDE                     postinc2        equ	4062
    79   000FEC                     preinc0         equ	4076
    80   000FE4                     preinc1         equ	4068
    81   000FDC                     preinc2         equ	4060
    82   000FF3                     prod            equ	4083
    83   000FF4                     prodh           equ	4084
    84   000FF3                     prodl           equ	4083
    85   000FD8                     status          equ	4056
    86   000FF5                     tablat          equ	4085
    87   000FF6                     tblptr          equ	4086
    88   000FF7                     tblptrh         equ	4087
    89   000FF6                     tblptrl         equ	4086
    90   000FF8                     tblptru         equ	4088
    91   000FFD                     tosl            equ	4093
    92   000FE8                     wreg            equ	4072
    93   000F80                     PORTA           equ	3968	;# 
    94   000F81                     PORTB           equ	3969	;# 
    95   000F82                     PORTC           equ	3970	;# 
    96   000F83                     PORTD           equ	3971	;# 
    97   000F84                     PORTE           equ	3972	;# 
    98   000F89                     LATA            equ	3977	;# 
    99   000F8A                     LATB            equ	3978	;# 
   100   000F8B                     LATC            equ	3979	;# 
   101   000F8C                     LATD            equ	3980	;# 
   102   000F8D                     LATE            equ	3981	;# 
   103   000F92                     TRISA           equ	3986	;# 
   104   000F92                     DDRA            equ	3986	;# 
   105   000F93                     TRISB           equ	3987	;# 
   106   000F93                     DDRB            equ	3987	;# 
   107   000F94                     TRISC           equ	3988	;# 
   108   000F94                     DDRC            equ	3988	;# 
   109   000F95                     TRISD           equ	3989	;# 
   110   000F95                     DDRD            equ	3989	;# 
   111   000F96                     TRISE           equ	3990	;# 
   112   000F96                     DDRE            equ	3990	;# 
   113   000F9B                     OSCTUNE         equ	3995	;# 
   114   000F9D                     PIE1            equ	3997	;# 
   115   000F9E                     PIR1            equ	3998	;# 
   116   000F9F                     IPR1            equ	3999	;# 
   117   000FA0                     PIE2            equ	4000	;# 
   118   000FA1                     PIR2            equ	4001	;# 
   119   000FA2                     IPR2            equ	4002	;# 
   120   000FA6                     EECON1          equ	4006	;# 
   121   000FA7                     EECON2          equ	4007	;# 
   122   000FA8                     EEDATA          equ	4008	;# 
   123   000FA9                     EEADR           equ	4009	;# 
   124   000FAB                     RCSTA           equ	4011	;# 
   125   000FAB                     RCSTA1          equ	4011	;# 
   126   000FAC                     TXSTA           equ	4012	;# 
   127   000FAC                     TXSTA1          equ	4012	;# 
   128   000FAD                     TXREG           equ	4013	;# 
   129   000FAD                     TXREG1          equ	4013	;# 
   130   000FAE                     RCREG           equ	4014	;# 
   131   000FAE                     RCREG1          equ	4014	;# 
   132   000FAF                     SPBRG           equ	4015	;# 
   133   000FAF                     SPBRG1          equ	4015	;# 
   134   000FB0                     SPBRGH          equ	4016	;# 
   135   000FB1                     T3CON           equ	4017	;# 
   136   000FB2                     TMR3            equ	4018	;# 
   137   000FB2                     TMR3L           equ	4018	;# 
   138   000FB3                     TMR3H           equ	4019	;# 
   139   000FB4                     CMCON           equ	4020	;# 
   140   000FB5                     CVRCON          equ	4021	;# 
   141   000FB6                     ECCP1AS         equ	4022	;# 
   142   000FB6                     ECCPAS          equ	4022	;# 
   143   000FB7                     PWM1CON         equ	4023	;# 
   144   000FB7                     ECCP1DEL        equ	4023	;# 
   145   000FB8                     BAUDCON         equ	4024	;# 
   146   000FB8                     BAUDCTL         equ	4024	;# 
   147   000FBA                     CCP2CON         equ	4026	;# 
   148   000FBB                     CCPR2           equ	4027	;# 
   149   000FBB                     CCPR2L          equ	4027	;# 
   150   000FBC                     CCPR2H          equ	4028	;# 
   151   000FBD                     CCP1CON         equ	4029	;# 
   152   000FBE                     CCPR1           equ	4030	;# 
   153   000FBE                     CCPR1L          equ	4030	;# 
   154   000FBF                     CCPR1H          equ	4031	;# 
   155   000FC0                     ADCON2          equ	4032	;# 
   156   000FC1                     ADCON1          equ	4033	;# 
   157   000FC2                     ADCON0          equ	4034	;# 
   158   000FC3                     ADRES           equ	4035	;# 
   159   000FC3                     ADRESL          equ	4035	;# 
   160   000FC4                     ADRESH          equ	4036	;# 
   161   000FC5                     SSPCON2         equ	4037	;# 
   162   000FC6                     SSPCON1         equ	4038	;# 
   163   000FC7                     SSPSTAT         equ	4039	;# 
   164   000FC8                     SSPADD          equ	4040	;# 
   165   000FC9                     SSPBUF          equ	4041	;# 
   166   000FCA                     T2CON           equ	4042	;# 
   167   000FCB                     PR2             equ	4043	;# 
   168   000FCB                     MEMCON          equ	4043	;# 
   169   000FCC                     TMR2            equ	4044	;# 
   170   000FCD                     T1CON           equ	4045	;# 
   171   000FCE                     TMR1            equ	4046	;# 
   172   000FCE                     TMR1L           equ	4046	;# 
   173   000FCF                     TMR1H           equ	4047	;# 
   174   000FD0                     RCON            equ	4048	;# 
   175   000FD1                     WDTCON          equ	4049	;# 
   176   000FD2                     HLVDCON         equ	4050	;# 
   177   000FD2                     LVDCON          equ	4050	;# 
   178   000FD3                     OSCCON          equ	4051	;# 
   179   000FD5                     T0CON           equ	4053	;# 
   180   000FD6                     TMR0            equ	4054	;# 
   181   000FD6                     TMR0L           equ	4054	;# 
   182   000FD7                     TMR0H           equ	4055	;# 
   183   000FD8                     STATUS          equ	4056	;# 
   184   000FD9                     FSR2            equ	4057	;# 
   185   000FD9                     FSR2L           equ	4057	;# 
   186   000FDA                     FSR2H           equ	4058	;# 
   187   000FDB                     PLUSW2          equ	4059	;# 
   188   000FDC                     PREINC2         equ	4060	;# 
   189   000FDD                     POSTDEC2        equ	4061	;# 
   190   000FDE                     POSTINC2        equ	4062	;# 
   191   000FDF                     INDF2           equ	4063	;# 
   192   000FE0                     BSR             equ	4064	;# 
   193   000FE1                     FSR1            equ	4065	;# 
   194   000FE1                     FSR1L           equ	4065	;# 
   195   000FE2                     FSR1H           equ	4066	;# 
   196   000FE3                     PLUSW1          equ	4067	;# 
   197   000FE4                     PREINC1         equ	4068	;# 
   198   000FE5                     POSTDEC1        equ	4069	;# 
   199   000FE6                     POSTINC1        equ	4070	;# 
   200   000FE7                     INDF1           equ	4071	;# 
   201   000FE8                     WREG            equ	4072	;# 
   202   000FE9                     FSR0            equ	4073	;# 
   203   000FE9                     FSR0L           equ	4073	;# 
   204   000FEA                     FSR0H           equ	4074	;# 
   205   000FEB                     PLUSW0          equ	4075	;# 
   206   000FEC                     PREINC0         equ	4076	;# 
   207   000FED                     POSTDEC0        equ	4077	;# 
   208   000FEE                     POSTINC0        equ	4078	;# 
   209   000FEF                     INDF0           equ	4079	;# 
   210   000FF0                     INTCON3         equ	4080	;# 
   211   000FF1                     INTCON2         equ	4081	;# 
   212   000FF2                     INTCON          equ	4082	;# 
   213   000FF3                     PROD            equ	4083	;# 
   214   000FF3                     PRODL           equ	4083	;# 
   215   000FF4                     PRODH           equ	4084	;# 
   216   000FF5                     TABLAT          equ	4085	;# 
   217   000FF6                     TBLPTR          equ	4086	;# 
   218   000FF6                     TBLPTRL         equ	4086	;# 
   219   000FF7                     TBLPTRH         equ	4087	;# 
   220   000FF8                     TBLPTRU         equ	4088	;# 
   221   000FF9                     PCLAT           equ	4089	;# 
   222   000FF9                     PC              equ	4089	;# 
   223   000FF9                     PCL             equ	4089	;# 
   224   000FFA                     PCLATH          equ	4090	;# 
   225   000FFB                     PCLATU          equ	4091	;# 
   226   000FFC                     STKPTR          equ	4092	;# 
   227   000FFD                     TOS             equ	4093	;# 
   228   000FFD                     TOSL            equ	4093	;# 
   229   000FFE                     TOSH            equ	4094	;# 
   230   000FFF                     TOSU            equ	4095	;# 
   231   000F93                     _TRISBbits      set	3987
   232   000F8B                     _LATC           set	3979
   233   000F94                     _TRISC          set	3988
   234   000FBE                     _CCPR1L         set	4030
   235   000FCB                     _PR2            set	4043
   236   000FBD                     _CCP1CONbits    set	4029
   237   000FD3                     _OSCCONbits     set	4051
   238   000FCA                     _T2CONbits      set	4042
   239   000FF1                     _INTCON2bits    set	4081
   240   000FF2                     _INTCONbits     set	4082
   241                           
   242                           ; #config settings
   243                           
   244                           	psect	cinit
   245   0007AE                     __pcinit:
   246                           	callstack 0
   247   0007AE                     start_initialization:
   248                           	callstack 0
   249   0007AE                     __initialization:
   250                           	callstack 0
   251                           
   252                           ; Clear objects allocated to COMRAM (3 bytes)
   253   0007AE  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   254   0007B0  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   255   0007B2  6A01               	clrf	__pbssCOMRAM& (0+255),c
   256   0007B4                     end_of_initialization:
   257                           	callstack 0
   258   0007B4                     __end_of__initialization:
   259                           	callstack 0
   260   0007B4  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   261   0007B6  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   262   0007B8  0100               	movlb	0
   263   0007BA  EF01  F003         	goto	_main	;jump to C main() function
   264                           
   265                           	psect	bssCOMRAM
   266   000001                     __pbssCOMRAM:
   267                           	callstack 0
   268   000001                     _start:
   269                           	callstack 0
   270   000001                     	ds	1
   271   000002                     _dec:
   272                           	callstack 0
   273   000002                     	ds	1
   274   000003                     _inc:
   275                           	callstack 0
   276   000003                     	ds	1
   277                           
   278                           	psect	cstackCOMRAM
   279   000004                     __pcstackCOMRAM:
   280                           	callstack 0
   281   000004                     ??_ISR:
   282                           
   283                           ; 1 bytes @ 0x0
   284   000004                     	ds	1
   285   000005                     ??_main:
   286                           
   287                           ; 1 bytes @ 0x1
   288   000005                     	ds	2
   289                           
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 26 in file "bonus.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;		None
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, status,2, status,0
   304 ;; Tracked objects:
   305 ;;		On entry : 0/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   309 ;;      Params:         0       0       0       0       0       0       0
   310 ;;      Locals:         0       0       0       0       0       0       0
   311 ;;      Temps:          2       0       0       0       0       0       0
   312 ;;      Totals:         2       0       0       0       0       0       0
   313 ;;Total ram usage:        2 bytes
   314 ;; Hardware stack levels required when called: 1
   315 ;; This function calls:
   316 ;;		Nothing
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text0
   323   000602                     __ptext0:
   324                           	callstack 0
   325   000602                     _main:
   326                           	callstack 30
   327   000602                     
   328                           ;bonus.c: 29:     TRISC = 0;
   329   000602  84CA               	bsf	202,2,c	;volatile
   330   000604                     
   331                           ;bonus.c: 30:     LATC = 0;
   332   000604  50CA               	movf	202,w,c	;volatile
   333   000606  0BFC               	andlw	-4
   334   000608  0901               	iorlw	1
   335   00060A  6ECA               	movwf	202,c	;volatile
   336                           
   337                           ;bonus.c: 34:     INTCONbits.INT0IF = 0;
   338   00060C  50D3               	movf	211,w,c	;volatile
   339   00060E  0B8F               	andlw	-113
   340   000610  0910               	iorlw	16
   341   000612  6ED3               	movwf	211,c	;volatile
   342                           
   343                           ;bonus.c: 38: 
   344   000614  50BD               	movf	189,w,c	;volatile
   345   000616  0BF0               	andlw	-16
   346   000618  090C               	iorlw	12
   347   00061A  6EBD               	movwf	189,c	;volatile
   348   00061C                     
   349                           ;bonus.c: 41: 
   350   00061C  6A94               	clrf	148,c	;volatile
   351   00061E                     
   352                           ;bonus.c: 42: 
   353   00061E  6A8B               	clrf	139,c	;volatile
   354   000620                     
   355                           ;bonus.c: 44:     PR2 = 0x9b;
   356   000620  8093               	bsf	147,0,c	;volatile
   357   000622                     
   358                           ;bonus.c: 45: 
   359   000622  9CF1               	bcf	241,6,c	;volatile
   360   000624                     
   361                           ;bonus.c: 46: 
   362   000624  92F2               	bcf	242,1,c	;volatile
   363   000626                     
   364                           ;bonus.c: 47: 
   365   000626  88F2               	bsf	242,4,c	;volatile
   366   000628                     
   367                           ;bonus.c: 48: 
   368   000628  8EF2               	bsf	242,7,c	;volatile
   369                           
   370                           ;bonus.c: 56:     start = 0;
   371   00062A  0E9B               	movlw	155
   372   00062C  6ECB               	movwf	203,c	;volatile
   373                           
   374                           ;bonus.c: 64:                 _delay((unsigned long)((30)*(125000/4000.0)));
   375   00062E  0E03               	movlw	3
   376   000630  6EBE               	movwf	190,c	;volatile
   377                           
   378                           ;bonus.c: 65:                 CCP1CONbits.DC1B = 0b11;
   379   000632  0E30               	movlw	48
   380   000634  12BD               	iorwf	189,f,c	;volatile
   381   000636                     
   382                           ;bonus.c: 66:                 CCPR1L--;
   383   000636  6A03               	clrf	_inc^0,c
   384   000638                     
   385                           ;bonus.c: 67:                 _delay((unsigned long)((30)*(125000/4000.0)));
   386   000638  6A02               	clrf	_dec^0,c
   387   00063A                     
   388                           ;bonus.c: 68:             }
   389   00063A  6A01               	clrf	_start^0,c
   390   00063C                     l40:
   391                           
   392                           ;bonus.c: 72:                 _delay((unsigned long)((30)*(125000/4000.0)));
   393   00063C  5001               	movf	_start^0,w,c
   394   00063E  B4D8               	btfsc	status,2,c
   395   000640  EF24  F003         	goto	u31
   396   000644  EF26  F003         	goto	u30
   397   000648                     u31:
   398   000648  EF1E  F003         	goto	l40
   399   00064C                     u30:
   400   00064C                     
   401                           ;bonus.c: 73:                 CCP1CONbits.DC1B = 0b00;
   402   00064C  0E13               	movlw	19
   403   00064E  18BE               	xorwf	190,w,c	;volatile
   404   000650  A4D8               	btfss	status,2,c
   405   000652  EF2D  F003         	goto	u41
   406   000656  EF2F  F003         	goto	u40
   407   00065A                     u41:
   408   00065A  EF4B  F003         	goto	l781
   409   00065E                     u40:
   410   00065E  38BD               	swapf	189,w,c	;volatile
   411   000660  0B03               	andlw	3
   412   000662  0900               	iorlw	0
   413   000664  A4D8               	btfss	status,2,c
   414   000666  EF37  F003         	goto	u51
   415   00066A  EF39  F003         	goto	u50
   416   00066E                     u51:
   417   00066E  EF4B  F003         	goto	l781
   418   000672                     u50:
   419   000672                     
   420                           ;bonus.c: 74:                 CCPR1L++;
   421   000672  6A03               	clrf	_inc^0,c
   422   000674                     
   423                           ;bonus.c: 75:                 _delay((unsigned long)((30)*(125000/4000.0)));
   424   000674  0E01               	movlw	1
   425   000676  6E02               	movwf	_dec^0,c
   426   000678                     
   427                           ;bonus.c: 76:             }
   428   000678  0EBB               	movlw	187
   429   00067A                     u127:
   430   00067A  D000               	nop2	
   431   00067C  2EE8               	decfsz	wreg,f,c
   432   00067E  D7FD               	bra	u127
   433   000680  D000               	nop2	
   434   000682                     
   435                           ;bonus.c: 77:             else{
   436   000682  0E30               	movlw	48
   437   000684  12BD               	iorwf	189,f,c	;volatile
   438   000686                     l777:
   439                           
   440                           ;bonus.c: 78:                 if(inc){
   441   000686  06BE               	decf	190,f,c	;volatile
   442   000688                     l779:
   443                           
   444                           ;bonus.c: 79:                     if(CCP1CONbits.DC1B == 0b11){
   445   000688  0EBB               	movlw	187
   446   00068A                     u137:
   447   00068A  D000               	nop2	
   448   00068C  2EE8               	decfsz	wreg,f,c
   449   00068E  D7FD               	bra	u137
   450   000690  D000               	nop2	
   451                           
   452                           ;bonus.c: 80:                         CCP1CONbits.DC1B = 0b00;
   453   000692  EF1E  F003         	goto	l40
   454   000696                     l781:
   455   000696  0E03               	movlw	3
   456   000698  18BE               	xorwf	190,w,c	;volatile
   457   00069A  A4D8               	btfss	status,2,c
   458   00069C  EF52  F003         	goto	u61
   459   0006A0  EF54  F003         	goto	u60
   460   0006A4                     u61:
   461   0006A4  EF6B  F003         	goto	l797
   462   0006A8                     u60:
   463   0006A8  38BD               	swapf	189,w,c	;volatile
   464   0006AA  0B03               	andlw	3
   465   0006AC  0A03               	xorlw	3
   466   0006AE  A4D8               	btfss	status,2,c
   467   0006B0  EF5C  F003         	goto	u71
   468   0006B4  EF5E  F003         	goto	u70
   469   0006B8                     u71:
   470   0006B8  EF6B  F003         	goto	l797
   471   0006BC                     u70:
   472   0006BC                     
   473                           ;bonus.c: 82:                     }
   474   0006BC  0E01               	movlw	1
   475   0006BE  6E03               	movwf	_inc^0,c
   476   0006C0                     
   477                           ;bonus.c: 83:                     else CCP1CONbits.DC1B++;
   478   0006C0  6A02               	clrf	_dec^0,c
   479   0006C2                     
   480                           ;bonus.c: 84:                     _delay((unsigned long)((30)*(125000/4000.0)));
   481   0006C2  0EBB               	movlw	187
   482   0006C4                     u147:
   483   0006C4  D000               	nop2	
   484   0006C6  2EE8               	decfsz	wreg,f,c
   485   0006C8  D7FD               	bra	u147
   486   0006CA  D000               	nop2	
   487   0006CC                     
   488                           ;bonus.c: 85:                 }
   489   0006CC  0ECF               	movlw	-49
   490   0006CE  16BD               	andwf	189,f,c	;volatile
   491   0006D0                     l793:
   492                           
   493                           ;bonus.c: 86:                 else if(dec){
   494   0006D0  2ABE               	incf	190,f,c	;volatile
   495   0006D2  EF44  F003         	goto	l779
   496   0006D6                     l797:
   497                           
   498                           ;bonus.c: 90:                     }
   499   0006D6  5003               	movf	_inc^0,w,c
   500   0006D8  B4D8               	btfsc	status,2,c
   501   0006DA  EF71  F003         	goto	u81
   502   0006DE  EF73  F003         	goto	u80
   503   0006E2                     u81:
   504   0006E2  EF90  F003         	goto	l809
   505   0006E6                     u80:
   506   0006E6                     
   507                           ;bonus.c: 91:                     else CCP1CONbits.DC1B--;
   508   0006E6  38BD               	swapf	189,w,c	;volatile
   509   0006E8  0B03               	andlw	3
   510   0006EA  0A03               	xorlw	3
   511   0006EC  A4D8               	btfss	status,2,c
   512   0006EE  EF7B  F003         	goto	u91
   513   0006F2  EF7D  F003         	goto	u90
   514   0006F6                     u91:
   515   0006F6  EF81  F003         	goto	l805
   516   0006FA                     u90:
   517   0006FA                     
   518                           ;bonus.c: 92:                     _delay((unsigned long)((30)*(125000/4000.0)));
   519   0006FA  0ECF               	movlw	-49
   520   0006FC  16BD               	andwf	189,f,c	;volatile
   521   0006FE  EF68  F003         	goto	l793
   522   000702                     l805:
   523   000702  0E01               	movlw	1
   524   000704  6E05               	movwf	??_main^0,c
   525   000706  38BD               	swapf	189,w,c	;volatile
   526   000708  0B03               	andlw	3
   527   00070A  6E06               	movwf	(??_main+1)^0,c
   528   00070C  5005               	movf	??_main^0,w,c
   529   00070E  2606               	addwf	(??_main+1)^0,f,c
   530   000710  3A06               	swapf	(??_main+1)^0,f,c
   531   000712  50BD               	movf	189,w,c	;volatile
   532   000714  1806               	xorwf	(??_main+1)^0,w,c
   533   000716  0BCF               	andlw	-49
   534   000718  1806               	xorwf	(??_main+1)^0,w,c
   535   00071A  6EBD               	movwf	189,c	;volatile
   536   00071C  EF44  F003         	goto	l779
   537   000720                     l809:
   538   000720  5002               	movf	_dec^0,w,c
   539   000722  B4D8               	btfsc	status,2,c
   540   000724  EF96  F003         	goto	u101
   541   000728  EF98  F003         	goto	u100
   542   00072C                     u101:
   543   00072C  EFB5  F003         	goto	l43
   544   000730                     u100:
   545   000730  38BD               	swapf	189,w,c	;volatile
   546   000732  0B03               	andlw	3
   547   000734  0900               	iorlw	0
   548   000736  A4D8               	btfss	status,2,c
   549   000738  EFA0  F003         	goto	u111
   550   00073C  EFA2  F003         	goto	u110
   551   000740                     u111:
   552   000740  EFA6  F003         	goto	l817
   553   000744                     u110:
   554   000744  0E30               	movlw	48
   555   000746  12BD               	iorwf	189,f,c	;volatile
   556   000748  EF43  F003         	goto	l777
   557   00074C                     l817:
   558   00074C  0E01               	movlw	1
   559   00074E  6E05               	movwf	??_main^0,c
   560   000750  38BD               	swapf	189,w,c	;volatile
   561   000752  0B03               	andlw	3
   562   000754  6E06               	movwf	(??_main+1)^0,c
   563   000756  5005               	movf	??_main^0,w,c
   564   000758  5E06               	subwf	(??_main+1)^0,f,c
   565   00075A  3A06               	swapf	(??_main+1)^0,f,c
   566   00075C  50BD               	movf	189,w,c	;volatile
   567   00075E  1806               	xorwf	(??_main+1)^0,w,c
   568   000760  0BCF               	andlw	-49
   569   000762  1806               	xorwf	(??_main+1)^0,w,c
   570   000764  6EBD               	movwf	189,c	;volatile
   571   000766  EF44  F003         	goto	l779
   572   00076A                     l43:
   573   00076A  EF1E  F003         	goto	l40
   574   00076E  EF07  F000         	goto	start
   575   000772                     __end_of_main:
   576                           	callstack 0
   577                           
   578 ;; *************** function _ISR *****************
   579 ;; Defined at:
   580 ;;		line 18 in file "bonus.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, status,2
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   594 ;;      Params:         0       0       0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0       0       0
   596 ;;      Temps:          1       0       0       0       0       0       0
   597 ;;      Totals:         1       0       0       0       0       0       0
   598 ;;Total ram usage:        1 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		Interrupt level 2
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	intcode
   608   000008                     __pintcode:
   609                           	callstack 0
   610   000008                     _ISR:
   611                           	callstack 30
   612                           
   613                           ;incstack = 0
   614   000008  8207               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   615   00000A  EDB9  F003         	call	int_func,f	;refresh shadow registers
   616                           
   617                           	psect	intcode_body
   618   000772                     __pintcode_body:
   619                           	callstack 30
   620   000772                     int_func:
   621                           	callstack 30
   622   000772  0006               	pop		; remove dummy address from shadow register refresh
   623   000774                     
   624                           ;bonus.c: 19: 
   625   000774  A2F2               	btfss	242,1,c	;volatile
   626   000776  EFBF  F003         	goto	i2u1_41
   627   00077A  EFC1  F003         	goto	i2u1_40
   628   00077E                     i2u1_41:
   629   00077E  EFD5  F003         	goto	i2l35
   630   000782                     i2u1_40:
   631   000782                     
   632                           ;bonus.c: 20: 
   633   000782  0E01               	movlw	1
   634   000784  6E03               	movwf	_inc^0,c
   635                           
   636                           ;bonus.c: 21: 
   637   000786  5001               	movf	_start^0,w,c
   638   000788  A4D8               	btfss	status,2,c
   639   00078A  EFC9  F003         	goto	i2u2_41
   640   00078E  EFCB  F003         	goto	i2u2_40
   641   000792                     i2u2_41:
   642   000792  EFD2  F003         	goto	i2l737
   643   000796                     i2u2_40:
   644   000796  0E0B               	movlw	11
   645   000798  6E04               	movwf	??_ISR^0,c
   646   00079A  0E24               	movlw	36
   647   00079C                     i2u15_47:
   648   00079C  2EE8               	decfsz	wreg,f,c
   649   00079E  D7FE               	bra	i2u15_47
   650   0007A0  2E04               	decfsz	??_ISR^0,f,c
   651   0007A2  D7FC               	bra	i2u15_47
   652   0007A4                     i2l737:
   653                           
   654                           ;bonus.c: 22:     OSCCONbits.IRCF = 0b001;
   655   0007A4  0E01               	movlw	1
   656   0007A6  6E01               	movwf	_start^0,c
   657   0007A8                     
   658                           ;bonus.c: 23: 
   659   0007A8  92F2               	bcf	242,1,c	;volatile
   660   0007AA                     i2l35:
   661   0007AA  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   662   0007AC  0011               	retfie		f
   663   0007AE                     __end_of_ISR:
   664                           	callstack 0
   665                           
   666                           	psect	smallconst
   667   000600                     __psmallconst:
   668                           	callstack 0
   669   000600  00                 	db	0
   670   000601  00                 	db	0	; dummy byte at the end
   671   000000                     __activetblptr  equ	0
   672                           
   673                           	psect	rparam
   674   000001                     ___rparam_used  equ	1
   675   000000                     ___param_bank   equ	0
   676   000000                     __Lparam        equ	__Lrparam
   677   000000                     __Hparam        equ	__Hrparam
   678                           
   679                           	psect	temp
   680   000007                     btemp:
   681                           	callstack 0
   682   000007                     	ds	1
   683   000007                     int$flags       set	btemp
   684   000008                     wtemp8          set	btemp+1
   685   000008                     ttemp5          set	btemp+1
   686   00000B                     ttemp6          set	btemp+4
   687   00000F                     ttemp7          set	btemp+8
   688                           
   689                           	psect	idloc
   690                           
   691                           ;Config register IDLOC0 @ 0x200000
   692                           ;	unspecified, using default values
   693   200000                     	org	2097152
   694   200000  FF                 	db	255
   695                           
   696                           ;Config register IDLOC1 @ 0x200001
   697                           ;	unspecified, using default values
   698   200001                     	org	2097153
   699   200001  FF                 	db	255
   700                           
   701                           ;Config register IDLOC2 @ 0x200002
   702                           ;	unspecified, using default values
   703   200002                     	org	2097154
   704   200002  FF                 	db	255
   705                           
   706                           ;Config register IDLOC3 @ 0x200003
   707                           ;	unspecified, using default values
   708   200003                     	org	2097155
   709   200003  FF                 	db	255
   710                           
   711                           ;Config register IDLOC4 @ 0x200004
   712                           ;	unspecified, using default values
   713   200004                     	org	2097156
   714   200004  FF                 	db	255
   715                           
   716                           ;Config register IDLOC5 @ 0x200005
   717                           ;	unspecified, using default values
   718   200005                     	org	2097157
   719   200005  FF                 	db	255
   720                           
   721                           ;Config register IDLOC6 @ 0x200006
   722                           ;	unspecified, using default values
   723   200006                     	org	2097158
   724   200006  FF                 	db	255
   725                           
   726                           ;Config register IDLOC7 @ 0x200007
   727                           ;	unspecified, using default values
   728   200007                     	org	2097159
   729   200007  FF                 	db	255
   730                           
   731                           	psect	config
   732                           
   733                           ; Padding undefined space
   734   300000                     	org	3145728
   735   300000  FF                 	db	255
   736                           
   737                           ;Config register CONFIG1H @ 0x300001
   738                           ;	Oscillator Selection bits
   739                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   740                           ;	Fail-Safe Clock Monitor Enable bit
   741                           ;	FCMEN = 0x0, unprogrammed default
   742                           ;	Internal/External Oscillator Switchover bit
   743                           ;	IESO = 0x0, unprogrammed default
   744   300001                     	org	3145729
   745   300001  08                 	db	8
   746                           
   747                           ;Config register CONFIG2L @ 0x300002
   748                           ;	Power-up Timer Enable bit
   749                           ;	PWRT = OFF, PWRT disabled
   750                           ;	Brown-out Reset Enable bits
   751                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
   752                           ;	Brown Out Reset Voltage bits
   753                           ;	BORV = 0x3, unprogrammed default
   754   300002                     	org	3145730
   755   300002  1B                 	db	27
   756                           
   757                           ;Config register CONFIG2H @ 0x300003
   758                           ;	Watchdog Timer Enable bit
   759                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   760                           ;	Watchdog Timer Postscale Select bits
   761                           ;	WDTPS = 0xF, unprogrammed default
   762   300003                     	org	3145731
   763   300003  1E                 	db	30
   764                           
   765                           ; Padding undefined space
   766   300004                     	org	3145732
   767   300004  FF                 	db	255
   768                           
   769                           ;Config register CONFIG3H @ 0x300005
   770                           ;	CCP2 MUX bit
   771                           ;	CCP2MX = 0x1, unprogrammed default
   772                           ;	PORTB A/D Enable bit
   773                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   774                           ;	Low-Power Timer1 Oscillator Enable bit
   775                           ;	LPT1OSC = 0x0, unprogrammed default
   776                           ;	MCLR Pin Enable bit
   777                           ;	MCLRE = 0x1, unprogrammed default
   778   300005                     	org	3145733
   779   300005  81                 	db	129
   780                           
   781                           ;Config register CONFIG4L @ 0x300006
   782                           ;	Stack Full/Underflow Reset Enable bit
   783                           ;	STVREN = 0x1, unprogrammed default
   784                           ;	Single-Supply ICSP Enable bit
   785                           ;	LVP = OFF, Single-Supply ICSP disabled
   786                           ;	Extended Instruction Set Enable bit
   787                           ;	XINST = 0x0, unprogrammed default
   788                           ;	Background Debugger Enable bit
   789                           ;	DEBUG = 0x1, unprogrammed default
   790   300006                     	org	3145734
   791   300006  81                 	db	129
   792                           
   793                           ; Padding undefined space
   794   300007                     	org	3145735
   795   300007  FF                 	db	255
   796                           
   797                           ;Config register CONFIG5L @ 0x300008
   798                           ;	unspecified, using default values
   799                           ;	Code Protection bit
   800                           ;	CP0 = 0x1, unprogrammed default
   801                           ;	Code Protection bit
   802                           ;	CP1 = 0x1, unprogrammed default
   803                           ;	Code Protection bit
   804                           ;	CP2 = 0x1, unprogrammed default
   805                           ;	Code Protection bit
   806                           ;	CP3 = 0x1, unprogrammed default
   807   300008                     	org	3145736
   808   300008  0F                 	db	15
   809                           
   810                           ;Config register CONFIG5H @ 0x300009
   811                           ;	Boot Block Code Protection bit
   812                           ;	CPB = 0x1, unprogrammed default
   813                           ;	Data EEPROM Code Protection bit
   814                           ;	CPD = OFF, Data EEPROM not code-protected
   815   300009                     	org	3145737
   816   300009  C0                 	db	192
   817                           
   818                           ;Config register CONFIG6L @ 0x30000A
   819                           ;	unspecified, using default values
   820                           ;	Write Protection bit
   821                           ;	WRT0 = 0x1, unprogrammed default
   822                           ;	Write Protection bit
   823                           ;	WRT1 = 0x1, unprogrammed default
   824                           ;	Write Protection bit
   825                           ;	WRT2 = 0x1, unprogrammed default
   826                           ;	Write Protection bit
   827                           ;	WRT3 = 0x1, unprogrammed default
   828   30000A                     	org	3145738
   829   30000A  0F                 	db	15
   830                           
   831                           ;Config register CONFIG6H @ 0x30000B
   832                           ;	unspecified, using default values
   833                           ;	Configuration Register Write Protection bit
   834                           ;	WRTC = 0x1, unprogrammed default
   835                           ;	Boot Block Write Protection bit
   836                           ;	WRTB = 0x1, unprogrammed default
   837                           ;	Data EEPROM Write Protection bit
   838                           ;	WRTD = 0x1, unprogrammed default
   839   30000B                     	org	3145739
   840   30000B  E0                 	db	224
   841                           
   842                           ;Config register CONFIG7L @ 0x30000C
   843                           ;	unspecified, using default values
   844                           ;	Table Read Protection bit
   845                           ;	EBTR0 = 0x1, unprogrammed default
   846                           ;	Table Read Protection bit
   847                           ;	EBTR1 = 0x1, unprogrammed default
   848                           ;	Table Read Protection bit
   849                           ;	EBTR2 = 0x1, unprogrammed default
   850                           ;	Table Read Protection bit
   851                           ;	EBTR3 = 0x1, unprogrammed default
   852   30000C                     	org	3145740
   853   30000C  0F                 	db	15
   854                           
   855                           ;Config register CONFIG7H @ 0x30000D
   856                           ;	unspecified, using default values
   857                           ;	Boot Block Table Read Protection bit
   858                           ;	EBTRB = 0x1, unprogrammed default
   859   30000D                     	org	3145741
   860   30000D  40                 	db	64
   861                           tosu	equ	0xFFF
   862                           tosh	equ	0xFFE
   863                           tosl	equ	0xFFD
   864                           stkptr	equ	0xFFC
   865                           pclatu	equ	0xFFB
   866                           pclath	equ	0xFFA
   867                           pcl	equ	0xFF9
   868                           tblptru	equ	0xFF8
   869                           tblptrh	equ	0xFF7
   870                           tblptrl	equ	0xFF6
   871                           tablat	equ	0xFF5
   872                           prodh	equ	0xFF4
   873                           prodl	equ	0xFF3
   874                           indf0	equ	0xFEF
   875                           postinc0	equ	0xFEE
   876                           postdec0	equ	0xFED
   877                           preinc0	equ	0xFEC
   878                           plusw0	equ	0xFEB
   879                           fsr0h	equ	0xFEA
   880                           fsr0l	equ	0xFE9
   881                           wreg	equ	0xFE8
   882                           indf1	equ	0xFE7
   883                           postinc1	equ	0xFE6
   884                           postdec1	equ	0xFE5
   885                           preinc1	equ	0xFE4
   886                           plusw1	equ	0xFE3
   887                           fsr1h	equ	0xFE2
   888                           fsr1l	equ	0xFE1
   889                           bsr	equ	0xFE0
   890                           indf2	equ	0xFDF
   891                           postinc2	equ	0xFDE
   892                           postdec2	equ	0xFDD
   893                           preinc2	equ	0xFDC
   894                           plusw2	equ	0xFDB
   895                           fsr2h	equ	0xFDA
   896                           fsr2l	equ	0xFD9
   897                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      3       6
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126      3       6      4.8%
BITBIGSFR_1l        32      0       0      0.0%
BITBIGSFR_1h        22      0       0      0.0%
BITBIGSFRh          16      0       0      0.0%
BITBIGSFR_5h        11      0       0      0.0%
BITBIGSFRl          11      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       6      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Nov 28 09:23:33 2024

                     l40 063C                       l43 076A                       u30 064C  
                     u31 0648                       u40 065E                       u41 065A  
                     u50 0672                       u51 066E                       u60 06A8  
                     u61 06A4                       u70 06BC                       u71 06B8  
                     u80 06E6                       u81 06E2                       u90 06FA  
                     u91 06F6                      l801 06FA                      l811 0730  
                    l813 0744                      l805 0702                      l741 0602  
                    l751 0622                      l743 0604                      l817 074C  
                    l809 0720                      l761 0638                      l753 0624  
                    l745 061C                      l771 0674                      l763 063A  
                    l755 0626                      l747 061E                      l773 0678  
                    l781 0696                      l765 064C                      l757 0628  
                    l749 0620                      l791 06CC                      l783 06A8  
                    l775 0682                      l767 065E                      l759 0636  
                    l793 06D0                      l785 06BC                      l777 0686  
                    l769 0672                      l787 06C0                      l779 0688  
                    l789 06C2                      l797 06D6                      l799 06E6  
                    u100 0730                      u101 072C                      u110 0744  
                    u111 0740                      u127 067A                      u137 068A  
                    u147 06C4                      _PR2 0FCB                      _ISR 0008  
                    _dec 0002                      _inc 0003                      wreg 0FE8  
                   ?_ISR 0004                     _LATC 0F8B                     i2l35 07AA  
                   _main 0602                     btemp 0007                     start 000E  
           ___param_bank 0000                    ??_ISR 0004                    ?_main 0004  
                  i2l731 0774                    i2l733 0782                    i2l735 0796  
                  i2l737 07A4                    i2l739 07A8                    _TRISC 0F94  
                  _start 0001                    ttemp5 0008                    ttemp6 000B  
                  ttemp7 000F                    status 0FD8                    wtemp8 0008  
        __initialization 07AE             __end_of_main 0772                   ??_main 0005  
          __activetblptr 0000                   _CCPR1L 0FBE                   i2u1_40 0782  
                 i2u1_41 077E                   i2u2_40 0796                   i2u2_41 0792  
                 isa$std 0001             __mediumconst 0000               __accesstop 0080  
__end_of__initialization 07B4            ___rparam_used 0001           __pcstackCOMRAM 0004  
                i2u15_47 079C                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 07AE                  __ramtop 0600  
                __ptext0 0602                _T2CONbits 0FCA           __pintcode_body 0772  
   end_of_initialization 07B4                  int_func 0772                _TRISBbits 0F93  
            _CCP1CONbits 0FBD      start_initialization 07AE              __end_of_ISR 07AE  
            __pbssCOMRAM 0001                __pintcode 0008              __smallconst 0600  
            _INTCON2bits 0FF1                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000                 int$flags 0007               _INTCONbits 0FF2  
               intlevel2 0000               _OSCCONbits 0FD3  



Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Dec 12 00:40:31 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 25/07/2024 GMT
    22                           ; 
    23                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000FE0                     bsr             equ	4064
    56   000FE9                     fsr0            equ	4073
    57   000FEA                     fsr0h           equ	4074
    58   000FE9                     fsr0l           equ	4073
    59   000FE1                     fsr1            equ	4065
    60   000FE2                     fsr1h           equ	4066
    61   000FE1                     fsr1l           equ	4065
    62   000FD9                     fsr2            equ	4057
    63   000FDA                     fsr2h           equ	4058
    64   000FD9                     fsr2l           equ	4057
    65   000FEF                     indf0           equ	4079
    66   000FE7                     indf1           equ	4071
    67   000FDF                     indf2           equ	4063
    68   000FF2                     intcon          equ	4082
    69   000000                     nvmcon          equ	0
    70   000FF9                     pcl             equ	4089
    71   000FFA                     pclath          equ	4090
    72   000FFB                     pclatu          equ	4091
    73   000FEB                     plusw0          equ	4075
    74   000FE3                     plusw1          equ	4067
    75   000FDB                     plusw2          equ	4059
    76   000FED                     postdec0        equ	4077
    77   000FE5                     postdec1        equ	4069
    78   000FDD                     postdec2        equ	4061
    79   000FEE                     postinc0        equ	4078
    80   000FE6                     postinc1        equ	4070
    81   000FDE                     postinc2        equ	4062
    82   000FEC                     preinc0         equ	4076
    83   000FE4                     preinc1         equ	4068
    84   000FDC                     preinc2         equ	4060
    85   000FF3                     prod            equ	4083
    86   000FF4                     prodh           equ	4084
    87   000FF3                     prodl           equ	4083
    88   000FD8                     status          equ	4056
    89   000FF5                     tablat          equ	4085
    90   000FF6                     tblptr          equ	4086
    91   000FF7                     tblptrh         equ	4087
    92   000FF6                     tblptrl         equ	4086
    93   000FF8                     tblptru         equ	4088
    94   000FFD                     tosl            equ	4093
    95   000FE8                     wreg            equ	4072
    96   000F80                     PORTA           equ	3968	;# 
    97   000F81                     PORTB           equ	3969	;# 
    98   000F82                     PORTC           equ	3970	;# 
    99   000F83                     PORTD           equ	3971	;# 
   100   000F84                     PORTE           equ	3972	;# 
   101   000F89                     LATA            equ	3977	;# 
   102   000F8A                     LATB            equ	3978	;# 
   103   000F8B                     LATC            equ	3979	;# 
   104   000F8C                     LATD            equ	3980	;# 
   105   000F8D                     LATE            equ	3981	;# 
   106   000F92                     TRISA           equ	3986	;# 
   107   000F92                     DDRA            equ	3986	;# 
   108   000F93                     TRISB           equ	3987	;# 
   109   000F93                     DDRB            equ	3987	;# 
   110   000F94                     TRISC           equ	3988	;# 
   111   000F94                     DDRC            equ	3988	;# 
   112   000F95                     TRISD           equ	3989	;# 
   113   000F95                     DDRD            equ	3989	;# 
   114   000F96                     TRISE           equ	3990	;# 
   115   000F96                     DDRE            equ	3990	;# 
   116   000F9B                     OSCTUNE         equ	3995	;# 
   117   000F9D                     PIE1            equ	3997	;# 
   118   000F9E                     PIR1            equ	3998	;# 
   119   000F9F                     IPR1            equ	3999	;# 
   120   000FA0                     PIE2            equ	4000	;# 
   121   000FA1                     PIR2            equ	4001	;# 
   122   000FA2                     IPR2            equ	4002	;# 
   123   000FA6                     EECON1          equ	4006	;# 
   124   000FA7                     EECON2          equ	4007	;# 
   125   000FA8                     EEDATA          equ	4008	;# 
   126   000FA9                     EEADR           equ	4009	;# 
   127   000FAB                     RCSTA           equ	4011	;# 
   128   000FAB                     RCSTA1          equ	4011	;# 
   129   000FAC                     TXSTA           equ	4012	;# 
   130   000FAC                     TXSTA1          equ	4012	;# 
   131   000FAD                     TXREG           equ	4013	;# 
   132   000FAD                     TXREG1          equ	4013	;# 
   133   000FAE                     RCREG           equ	4014	;# 
   134   000FAE                     RCREG1          equ	4014	;# 
   135   000FAF                     SPBRG           equ	4015	;# 
   136   000FAF                     SPBRG1          equ	4015	;# 
   137   000FB0                     SPBRGH          equ	4016	;# 
   138   000FB1                     T3CON           equ	4017	;# 
   139   000FB2                     TMR3            equ	4018	;# 
   140   000FB2                     TMR3L           equ	4018	;# 
   141   000FB3                     TMR3H           equ	4019	;# 
   142   000FB4                     CMCON           equ	4020	;# 
   143   000FB5                     CVRCON          equ	4021	;# 
   144   000FB6                     ECCP1AS         equ	4022	;# 
   145   000FB6                     ECCPAS          equ	4022	;# 
   146   000FB7                     PWM1CON         equ	4023	;# 
   147   000FB7                     ECCP1DEL        equ	4023	;# 
   148   000FB8                     BAUDCON         equ	4024	;# 
   149   000FB8                     BAUDCTL         equ	4024	;# 
   150   000FBA                     CCP2CON         equ	4026	;# 
   151   000FBB                     CCPR2           equ	4027	;# 
   152   000FBB                     CCPR2L          equ	4027	;# 
   153   000FBC                     CCPR2H          equ	4028	;# 
   154   000FBD                     CCP1CON         equ	4029	;# 
   155   000FBE                     CCPR1           equ	4030	;# 
   156   000FBE                     CCPR1L          equ	4030	;# 
   157   000FBF                     CCPR1H          equ	4031	;# 
   158   000FC0                     ADCON2          equ	4032	;# 
   159   000FC1                     ADCON1          equ	4033	;# 
   160   000FC2                     ADCON0          equ	4034	;# 
   161   000FC3                     ADRES           equ	4035	;# 
   162   000FC3                     ADRESL          equ	4035	;# 
   163   000FC4                     ADRESH          equ	4036	;# 
   164   000FC5                     SSPCON2         equ	4037	;# 
   165   000FC6                     SSPCON1         equ	4038	;# 
   166   000FC7                     SSPSTAT         equ	4039	;# 
   167   000FC8                     SSPADD          equ	4040	;# 
   168   000FC9                     SSPBUF          equ	4041	;# 
   169   000FCA                     T2CON           equ	4042	;# 
   170   000FCB                     PR2             equ	4043	;# 
   171   000FCB                     MEMCON          equ	4043	;# 
   172   000FCC                     TMR2            equ	4044	;# 
   173   000FCD                     T1CON           equ	4045	;# 
   174   000FCE                     TMR1            equ	4046	;# 
   175   000FCE                     TMR1L           equ	4046	;# 
   176   000FCF                     TMR1H           equ	4047	;# 
   177   000FD0                     RCON            equ	4048	;# 
   178   000FD1                     WDTCON          equ	4049	;# 
   179   000FD2                     HLVDCON         equ	4050	;# 
   180   000FD2                     LVDCON          equ	4050	;# 
   181   000FD3                     OSCCON          equ	4051	;# 
   182   000FD5                     T0CON           equ	4053	;# 
   183   000FD6                     TMR0            equ	4054	;# 
   184   000FD6                     TMR0L           equ	4054	;# 
   185   000FD7                     TMR0H           equ	4055	;# 
   186   000FD8                     STATUS          equ	4056	;# 
   187   000FD9                     FSR2            equ	4057	;# 
   188   000FD9                     FSR2L           equ	4057	;# 
   189   000FDA                     FSR2H           equ	4058	;# 
   190   000FDB                     PLUSW2          equ	4059	;# 
   191   000FDC                     PREINC2         equ	4060	;# 
   192   000FDD                     POSTDEC2        equ	4061	;# 
   193   000FDE                     POSTINC2        equ	4062	;# 
   194   000FDF                     INDF2           equ	4063	;# 
   195   000FE0                     BSR             equ	4064	;# 
   196   000FE1                     FSR1            equ	4065	;# 
   197   000FE1                     FSR1L           equ	4065	;# 
   198   000FE2                     FSR1H           equ	4066	;# 
   199   000FE3                     PLUSW1          equ	4067	;# 
   200   000FE4                     PREINC1         equ	4068	;# 
   201   000FE5                     POSTDEC1        equ	4069	;# 
   202   000FE6                     POSTINC1        equ	4070	;# 
   203   000FE7                     INDF1           equ	4071	;# 
   204   000FE8                     WREG            equ	4072	;# 
   205   000FE9                     FSR0            equ	4073	;# 
   206   000FE9                     FSR0L           equ	4073	;# 
   207   000FEA                     FSR0H           equ	4074	;# 
   208   000FEB                     PLUSW0          equ	4075	;# 
   209   000FEC                     PREINC0         equ	4076	;# 
   210   000FED                     POSTDEC0        equ	4077	;# 
   211   000FEE                     POSTINC0        equ	4078	;# 
   212   000FEF                     INDF0           equ	4079	;# 
   213   000FF0                     INTCON3         equ	4080	;# 
   214   000FF1                     INTCON2         equ	4081	;# 
   215   000FF2                     INTCON          equ	4082	;# 
   216   000FF3                     PROD            equ	4083	;# 
   217   000FF3                     PRODL           equ	4083	;# 
   218   000FF4                     PRODH           equ	4084	;# 
   219   000FF5                     TABLAT          equ	4085	;# 
   220   000FF6                     TBLPTR          equ	4086	;# 
   221   000FF6                     TBLPTRL         equ	4086	;# 
   222   000FF7                     TBLPTRH         equ	4087	;# 
   223   000FF8                     TBLPTRU         equ	4088	;# 
   224   000FF9                     PCLAT           equ	4089	;# 
   225   000FF9                     PC              equ	4089	;# 
   226   000FF9                     PCL             equ	4089	;# 
   227   000FFA                     PCLATH          equ	4090	;# 
   228   000FFB                     PCLATU          equ	4091	;# 
   229   000FFC                     STKPTR          equ	4092	;# 
   230   000FFD                     TOS             equ	4093	;# 
   231   000FFD                     TOSL            equ	4093	;# 
   232   000FFE                     TOSH            equ	4094	;# 
   233   000FFF                     TOSU            equ	4095	;# 
   234                           
   235                           	psect	idataCOMRAM
   236   0007E2                     __pidataCOMRAM:
   237                           	callstack 0
   238                           
   239                           ;initializer for _threshold
   240   0007E2  000A               	dw	10
   241                           
   242                           	psect	smallconst
   243   000600                     __psmallconst:
   244                           	callstack 0
   245   000600  00                 	db	0
   246   000601                     _B:
   247                           	callstack 0
   248   000601  00                 	db	0
   249   000602  02                 	db	2
   250   000603  04                 	db	4
   251   000604  06                 	db	6
   252   000605  08                 	db	8
   253   000606  0A                 	db	10
   254   000607  0C                 	db	12
   255   000608  0E                 	db	14
   256   000609                     __end_of_B:
   257                           	callstack 0
   258   000609                     _A:
   259                           	callstack 0
   260   000609  01                 	db	1
   261   00060A  03                 	db	3
   262   00060B  05                 	db	5
   263   00060C  07                 	db	7
   264   00060D  09                 	db	9
   265   00060E  0B                 	db	11
   266   00060F  0D                 	db	13
   267   000610  0F                 	db	15
   268   000611                     __end_of_A:
   269                           	callstack 0
   270   000611  00                 	db	0	; dummy byte at the end
   271   000001                     __activetblptr  equ	1
   272                           
   273                           	psect	nvCOMRAM
   274   000001                     __pnvCOMRAM:
   275                           	callstack 0
   276   000001                     _v_before:
   277                           	callstack 0
   278   000001                     	ds	2
   279   000003                     _value:
   280                           	callstack 0
   281   000003                     	ds	2
   282   000005                     _now:
   283                           	callstack 0
   284   000005                     	ds	2
   285   000007                     _index:
   286                           	callstack 0
   287   000007                     	ds	2
   288   000FF2                     _INTCONbits     set	4082
   289   000F9D                     _PIE1bits       set	3997
   290   000FC0                     _ADCON2bits     set	4032
   291   000FC1                     _ADCON1bits     set	4033
   292   000F8A                     _LATB           set	3978
   293   000F93                     _TRISB          set	3987
   294   000F92                     _TRISAbits      set	3986
   295   000FD3                     _OSCCONbits     set	4051
   296   000FC2                     _ADCON0bits     set	4034
   297   000F9E                     _PIR1bits       set	3998
   298   000FC3                     _ADRESL         set	4035
   299   000FC4                     _ADRESH         set	4036
   300                           
   301                           ; #config settings
   302                           
   303                           	psect	cinit
   304   0007B6                     __pcinit:
   305                           	callstack 0
   306   0007B6                     start_initialization:
   307                           	callstack 0
   308   0007B6                     __initialization:
   309                           	callstack 0
   310                           
   311                           ; Initialize objects allocated to COMRAM (2 bytes)
   312                           ; load TBLPTR registers with __pidataCOMRAM
   313   0007B6  0EE2               	movlw	low __pidataCOMRAM
   314   0007B8  6EF6               	movwf	tblptrl,c
   315   0007BA  0E07               	movlw	high __pidataCOMRAM
   316   0007BC  6EF7               	movwf	tblptrh,c
   317   0007BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   318   0007C0  6EF8               	movwf	tblptru,c
   319   0007C2  0009               	tblrd		*+	;fetch initializer
   320   0007C4  CFF5 F011          	movff	tablat,__pdataCOMRAM
   321   0007C8  0009               	tblrd		*+	;fetch initializer
   322   0007CA  CFF5 F012          	movff	tablat,__pdataCOMRAM+1
   323                           
   324                           ; Clear objects allocated to COMRAM (1 bytes)
   325   0007CE  6A13               	clrf	__pbssCOMRAM& (0+255),c
   326   0007D0                     end_of_initialization:
   327                           	callstack 0
   328   0007D0                     __end_of__initialization:
   329                           	callstack 0
   330   0007D0  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   331   0007D2  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   332   0007D4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   333   0007D6  6EF8               	movwf	tblptru,c
   334   0007D8  0E06               	movlw	high __Lsmallconst
   335   0007DA  6EF7               	movwf	tblptrh,c
   336   0007DC  0100               	movlb	0
   337   0007DE  EF09  F003         	goto	_main	;jump to C main() function
   338                           
   339                           	psect	bssCOMRAM
   340   000013                     __pbssCOMRAM:
   341                           	callstack 0
   342   000013                     _check:
   343                           	callstack 0
   344   000013                     	ds	1
   345                           
   346                           	psect	dataCOMRAM
   347   000011                     __pdataCOMRAM:
   348                           	callstack 0
   349   000011                     _threshold:
   350                           	callstack 0
   351   000011                     	ds	2
   352                           
   353                           	psect	cstackCOMRAM
   354   000009                     __pcstackCOMRAM:
   355                           	callstack 0
   356   000009                     ??_H_ISR:
   357                           
   358                           ; 1 bytes @ 0x0
   359   000009                     	ds	4
   360   00000D                     ??_main:
   361                           
   362                           ; 1 bytes @ 0x4
   363   00000D                     	ds	4
   364                           
   365 ;;
   366 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   367 ;;
   368 ;; *************** function _main *****************
   369 ;; Defined at:
   370 ;;		line 52 in file "advanced.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   384 ;;      Params:         0       0       0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0       0       0
   386 ;;      Temps:          4       0       0       0       0       0       0
   387 ;;      Totals:         4       0       0       0       0       0       0
   388 ;;Total ram usage:        4 bytes
   389 ;; Hardware stack levels required when called: 1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text0
   398   000612                     __ptext0:
   399                           	callstack 0
   400   000612                     _main:
   401                           	callstack 30
   402   000612                     
   403                           ;advanced.c: 55: 
   404   000612  50D3               	movf	211,w,c	;volatile
   405   000614  0B8F               	andlw	-113
   406   000616  0940               	iorlw	64
   407   000618  6ED3               	movwf	211,c	;volatile
   408   00061A                     
   409                           ;advanced.c: 56: 
   410   00061A  8092               	bsf	146,0,c	;volatile
   411   00061C                     
   412                           ;advanced.c: 57: 
   413   00061C  6A93               	clrf	147,c	;volatile
   414   00061E                     
   415                           ;advanced.c: 58:     PIE1bits.ADIE = 1;
   416   00061E  6A8A               	clrf	138,c	;volatile
   417   000620                     
   418                           ;advanced.c: 61:     INTCONbits.GIE = 1;
   419   000620  98C1               	bcf	193,4,c	;volatile
   420   000622                     
   421                           ;advanced.c: 62: 
   422   000622  9AC1               	bcf	193,5,c	;volatile
   423                           
   424                           ;advanced.c: 63: 
   425   000624  50C1               	movf	193,w,c	;volatile
   426   000626  0BF0               	andlw	-16
   427   000628  090E               	iorlw	14
   428   00062A  6EC1               	movwf	193,c	;volatile
   429                           
   430                           ;advanced.c: 64: 
   431   00062C  0EC3               	movlw	-61
   432   00062E  16C2               	andwf	194,f,c	;volatile
   433                           
   434                           ;advanced.c: 65:     ADCON0bits.GO = 1;
   435   000630  0EF8               	movlw	-8
   436   000632  16C0               	andwf	192,f,c	;volatile
   437                           
   438                           ;advanced.c: 66:     value = (ADRESH << 2) | (ADRESL >> 6);
   439   000634  50C0               	movf	192,w,c	;volatile
   440   000636  0BC7               	andlw	-57
   441   000638  0908               	iorlw	8
   442   00063A  6EC0               	movwf	192,c	;volatile
   443   00063C                     
   444                           ;advanced.c: 67:     index = value / 128;
   445   00063C  80C2               	bsf	194,0,c	;volatile
   446   00063E                     
   447                           ;advanced.c: 68:     v_before = value;
   448   00063E  9EC0               	bcf	192,7,c	;volatile
   449   000640                     
   450                           ;advanced.c: 72:     while(1){
   451   000640  8C9D               	bsf	157,6,c	;volatile
   452   000642                     
   453                           ;advanced.c: 73:         if(check == 0){
   454   000642  9C9E               	bcf	158,6,c	;volatile
   455   000644                     
   456                           ;advanced.c: 74:             LATB = A[index];
   457   000644  8CF2               	bsf	242,6,c	;volatile
   458   000646                     
   459                           ;advanced.c: 75:         }
   460   000646  8EF2               	bsf	242,7,c	;volatile
   461   000648                     
   462                           ;advanced.c: 79:     }
   463   000648  82C2               	bsf	194,1,c	;volatile
   464   00064A                     
   465                           ;advanced.c: 80: 
   466   00064A  CFC3 F00D          	movff	4035,??_main	;volatile
   467   00064E  0E06               	movlw	6
   468   000650  6E0E               	movwf	(??_main+1)^0,c
   469   000652                     u55:
   470   000652  90D8               	bcf	status,0,c
   471   000654  320D               	rrcf	??_main^0,f,c
   472   000656  2E0E               	decfsz	(??_main+1)^0,f,c
   473   000658  EF29  F003         	goto	u55
   474   00065C  500D               	movf	??_main^0,w,c
   475   00065E  CFC4 F00F          	movff	4036,??_main+2	;volatile
   476   000662  6A10               	clrf	(??_main+3)^0,c
   477   000664  90D8               	bcf	status,0,c
   478   000666  360F               	rlcf	(??_main+2)^0,f,c
   479   000668  3610               	rlcf	(??_main+3)^0,f,c
   480   00066A  90D8               	bcf	status,0,c
   481   00066C  360F               	rlcf	(??_main+2)^0,f,c
   482   00066E  3610               	rlcf	(??_main+3)^0,f,c
   483   000670  100F               	iorwf	(??_main+2)^0,w,c
   484   000672  6E03               	movwf	_value^0,c
   485   000674  5010               	movf	(??_main+3)^0,w,c
   486   000676  6E04               	movwf	(_value+1)^0,c
   487   000678                     
   488                           ;advanced.c: 81:     return;
   489   000678  C003  F00D         	movff	_value,??_main
   490   00067C  C004  F00E         	movff	_value+1,??_main+1
   491   000680  0E07               	movlw	7
   492   000682  6E0F               	movwf	(??_main+2)^0,c
   493   000684                     u65:
   494   000684  90D8               	bcf	status,0,c
   495   000686  320E               	rrcf	(??_main+1)^0,f,c
   496   000688  320D               	rrcf	??_main^0,f,c
   497   00068A  2E0F               	decfsz	(??_main+2)^0,f,c
   498   00068C  EF42  F003         	goto	u65
   499   000690  C00D  F007         	movff	??_main,_index
   500   000694  C00E  F008         	movff	??_main+1,_index+1
   501   000698                     
   502                           ;advanced.c: 82: }
   503   000698  C003  F001         	movff	_value,_v_before
   504   00069C  C004  F002         	movff	_value+1,_v_before+1
   505   0006A0  6A13               	clrf	_check^0,c
   506   0006A2  5007               	movf	_index^0,w,c
   507   0006A4  0F09               	addlw	low _A
   508   0006A6  6E0D               	movwf	??_main^0,c
   509   0006A8  C00D  FFF6         	movff	??_main,tblptrl
   510   0006AC                     	if	0	;There is only one active tblptr byte
   511   0006AC                     	endif
   512   0006AC                     	if	0	;tblptru may be non-zero
   513   0006AC                     	endif
   514   0006AC                     	if	0	;tblptru may be non-zero
   515   0006AC                     	endif
   516   0006AC  0008               	tblrd		*
   517   0006AE  CFF5 FF8A          	movff	tablat,3978	;volatile
   518   0006B2  5007               	movf	_index^0,w,c
   519   0006B4  0F09               	addlw	low _A
   520   0006B6  6E0D               	movwf	??_main^0,c
   521   0006B8  C00D  FFF6         	movff	??_main,tblptrl
   522   0006BC                     	if	0	;There is only one active tblptr byte
   523   0006BC                     	endif
   524   0006BC                     	if	0	;tblptru may be non-zero
   525   0006BC                     	endif
   526   0006BC                     	if	0	;tblptru may be non-zero
   527   0006BC                     	endif
   528   0006BC  0008               	tblrd		*
   529   0006BE  50F5               	movf	tablat,w,c
   530   0006C0  6E05               	movwf	_now^0,c
   531   0006C2  6A06               	clrf	(_now+1)^0,c
   532   0006C4                     l53:
   533   0006C4  5013               	movf	_check^0,w,c
   534   0006C6  A4D8               	btfss	status,2,c
   535   0006C8  EF68  F003         	goto	u71
   536   0006CC  EF6A  F003         	goto	u70
   537   0006D0                     u71:
   538   0006D0  EF74  F003         	goto	l792
   539   0006D4                     u70:
   540   0006D4  5007               	movf	_index^0,w,c
   541   0006D6  0F09               	addlw	low _A
   542   0006D8  6E0D               	movwf	??_main^0,c
   543   0006DA  C00D  FFF6         	movff	??_main,tblptrl
   544   0006DE                     	if	0	;There is only one active tblptr byte
   545   0006DE                     	endif
   546   0006DE                     	if	0	;tblptru may be non-zero
   547   0006DE                     	endif
   548   0006DE                     	if	0	;tblptru may be non-zero
   549   0006DE                     	endif
   550   0006DE  0008               	tblrd		*
   551   0006E0  CFF5 FF8A          	movff	tablat,3978	;volatile
   552   0006E4  EF62  F003         	goto	l53
   553   0006E8                     l792:
   554   0006E8  5007               	movf	_index^0,w,c
   555   0006EA  0F01               	addlw	low _B
   556   0006EC  6E0D               	movwf	??_main^0,c
   557   0006EE  C00D  FFF6         	movff	??_main,tblptrl
   558   0006F2                     	if	0	;There is only one active tblptr byte
   559   0006F2                     	endif
   560   0006F2                     	if	0	;tblptru may be non-zero
   561   0006F2                     	endif
   562   0006F2                     	if	0	;tblptru may be non-zero
   563   0006F2                     	endif
   564   0006F2  0008               	tblrd		*
   565   0006F4  CFF5 FF8A          	movff	tablat,3978	;volatile
   566   0006F8  EF62  F003         	goto	l53
   567   0006FC  EF07  F000         	goto	start
   568   000700                     __end_of_main:
   569                           	callstack 0
   570                           
   571 ;; *************** function _H_ISR *****************
   572 ;; Defined at:
   573 ;;		line 22 in file "advanced.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, status,2, status,0
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   587 ;;      Params:         0       0       0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0       0       0
   589 ;;      Temps:          4       0       0       0       0       0       0
   590 ;;      Totals:         4       0       0       0       0       0       0
   591 ;;Total ram usage:        4 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		Interrupt level 2
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           	psect	intcode
   601   000008                     __pintcode:
   602                           	callstack 0
   603   000008                     _H_ISR:
   604                           	callstack 30
   605                           
   606                           ;incstack = 0
   607   000008  8214               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   608   00000A  ED80  F003         	call	int_func,f	;refresh shadow registers
   609                           
   610                           	psect	intcode_body
   611   000700                     __pintcode_body:
   612                           	callstack 30
   613   000700                     int_func:
   614                           	callstack 30
   615   000700  0006               	pop		; remove dummy address from shadow register refresh
   616   000702                     
   617                           ;advanced.c: 25: 
   618   000702  CFC3 F009          	movff	4035,??_H_ISR	;volatile
   619   000706  0E06               	movlw	6
   620   000708  6E0A               	movwf	(??_H_ISR+1)^0,c
   621   00070A                     i2u1_45:
   622   00070A  90D8               	bcf	status,0,c
   623   00070C  3209               	rrcf	??_H_ISR^0,f,c
   624   00070E  2E0A               	decfsz	(??_H_ISR+1)^0,f,c
   625   000710  EF85  F003         	goto	i2u1_45
   626   000714  5009               	movf	??_H_ISR^0,w,c
   627   000716  CFC4 F00B          	movff	4036,??_H_ISR+2	;volatile
   628   00071A  6A0C               	clrf	(??_H_ISR+3)^0,c
   629   00071C  90D8               	bcf	status,0,c
   630   00071E  360B               	rlcf	(??_H_ISR+2)^0,f,c
   631   000720  360C               	rlcf	(??_H_ISR+3)^0,f,c
   632   000722  90D8               	bcf	status,0,c
   633   000724  360B               	rlcf	(??_H_ISR+2)^0,f,c
   634   000726  360C               	rlcf	(??_H_ISR+3)^0,f,c
   635   000728  100B               	iorwf	(??_H_ISR+2)^0,w,c
   636   00072A  6E03               	movwf	_value^0,c
   637   00072C  500C               	movf	(??_H_ISR+3)^0,w,c
   638   00072E  6E04               	movwf	(_value+1)^0,c
   639                           
   640                           ;advanced.c: 26: 
   641   000730  5011               	movf	_threshold^0,w,c
   642   000732  2401               	addwf	_v_before^0,w,c
   643   000734  6E09               	movwf	??_H_ISR^0,c
   644   000736  5012               	movf	(_threshold+1)^0,w,c
   645   000738  2002               	addwfc	(_v_before+1)^0,w,c
   646   00073A  6E0A               	movwf	(??_H_ISR+1)^0,c
   647   00073C  5003               	movf	_value^0,w,c
   648   00073E  5C09               	subwf	??_H_ISR^0,w,c
   649   000740  5004               	movf	(_value+1)^0,w,c
   650   000742  580A               	subwfb	(??_H_ISR+1)^0,w,c
   651   000744  B0D8               	btfsc	status,0,c
   652   000746  EFA7  F003         	goto	i2u2_41
   653   00074A  EFA9  F003         	goto	i2u2_40
   654   00074E                     i2u2_41:
   655   00074E  EFB0  F003         	goto	i2l738
   656   000752                     i2u2_40:
   657   000752                     
   658                           ;advanced.c: 27:     PIR1bits.ADIF = 0;
   659   000752  6A13               	clrf	_check^0,c
   660                           
   661                           ;advanced.c: 28: 
   662   000754  C003  F001         	movff	_value,_v_before
   663   000758  C004  F002         	movff	_value+1,_v_before+1
   664                           
   665                           ;advanced.c: 29: 
   666   00075C  EFC7  F003         	goto	i2l744
   667   000760                     i2l738:
   668   000760  5011               	movf	_threshold^0,w,c
   669   000762  5C01               	subwf	_v_before^0,w,c
   670   000764  6E09               	movwf	??_H_ISR^0,c
   671   000766  5012               	movf	(_threshold+1)^0,w,c
   672   000768  5802               	subwfb	(_v_before+1)^0,w,c
   673   00076A  6E0A               	movwf	(??_H_ISR+1)^0,c
   674   00076C  5009               	movf	??_H_ISR^0,w,c
   675   00076E  5C03               	subwf	_value^0,w,c
   676   000770  500A               	movf	(??_H_ISR+1)^0,w,c
   677   000772  5804               	subwfb	(_value+1)^0,w,c
   678   000774  B0D8               	btfsc	status,0,c
   679   000776  EFBF  F003         	goto	i2u3_41
   680   00077A  EFC1  F003         	goto	i2u3_40
   681   00077E                     i2u3_41:
   682   00077E  EFC7  F003         	goto	i2l744
   683   000782                     i2u3_40:
   684   000782                     
   685                           ;advanced.c: 31: 
   686   000782  0E01               	movlw	1
   687   000784  6E13               	movwf	_check^0,c
   688   000786                     
   689                           ;advanced.c: 32:     ADCON0bits.GO = 1;
   690   000786  C003  F001         	movff	_value,_v_before
   691   00078A  C004  F002         	movff	_value+1,_v_before+1
   692   00078E                     i2l744:
   693                           
   694                           ;advanced.c: 36: }
   695   00078E  C003  F009         	movff	_value,??_H_ISR
   696   000792  C004  F00A         	movff	_value+1,??_H_ISR+1
   697   000796  0E07               	movlw	7
   698   000798  6E0B               	movwf	(??_H_ISR+2)^0,c
   699   00079A                     i2u4_45:
   700   00079A  90D8               	bcf	status,0,c
   701   00079C  320A               	rrcf	(??_H_ISR+1)^0,f,c
   702   00079E  3209               	rrcf	??_H_ISR^0,f,c
   703   0007A0  2E0B               	decfsz	(??_H_ISR+2)^0,f,c
   704   0007A2  EFCD  F003         	goto	i2u4_45
   705   0007A6  C009  F007         	movff	??_H_ISR,_index
   706   0007AA  C00A  F008         	movff	??_H_ISR+1,_index+1
   707   0007AE                     
   708                           ;advanced.c: 41:     OSCCONbits.IRCF = 0b100;
   709   0007AE  9C9E               	bcf	158,6,c	;volatile
   710   0007B0                     
   711                           ;advanced.c: 46: 
   712   0007B0  82C2               	bsf	194,1,c	;volatile
   713   0007B2  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   714   0007B4  0011               	retfie		f
   715   0007B6                     __end_of_H_ISR:
   716                           	callstack 0
   717                           
   718                           	psect	rparam
   719   000001                     ___rparam_used  equ	1
   720   000000                     ___param_bank   equ	0
   721   000000                     __Lparam        equ	__Lrparam
   722   000000                     __Hparam        equ	__Hrparam
   723                           
   724                           	psect	temp
   725   000014                     btemp:
   726                           	callstack 0
   727   000014                     	ds	1
   728   000014                     int$flags       set	btemp
   729   000015                     wtemp8          set	btemp+1
   730   000015                     ttemp5          set	btemp+1
   731   000018                     ttemp6          set	btemp+4
   732   00001C                     ttemp7          set	btemp+8
   733                           
   734                           	psect	idloc
   735                           
   736                           ;Config register IDLOC0 @ 0x200000
   737                           ;	unspecified, using default values
   738   200000                     	org	2097152
   739   200000  FF                 	db	255
   740                           
   741                           ;Config register IDLOC1 @ 0x200001
   742                           ;	unspecified, using default values
   743   200001                     	org	2097153
   744   200001  FF                 	db	255
   745                           
   746                           ;Config register IDLOC2 @ 0x200002
   747                           ;	unspecified, using default values
   748   200002                     	org	2097154
   749   200002  FF                 	db	255
   750                           
   751                           ;Config register IDLOC3 @ 0x200003
   752                           ;	unspecified, using default values
   753   200003                     	org	2097155
   754   200003  FF                 	db	255
   755                           
   756                           ;Config register IDLOC4 @ 0x200004
   757                           ;	unspecified, using default values
   758   200004                     	org	2097156
   759   200004  FF                 	db	255
   760                           
   761                           ;Config register IDLOC5 @ 0x200005
   762                           ;	unspecified, using default values
   763   200005                     	org	2097157
   764   200005  FF                 	db	255
   765                           
   766                           ;Config register IDLOC6 @ 0x200006
   767                           ;	unspecified, using default values
   768   200006                     	org	2097158
   769   200006  FF                 	db	255
   770                           
   771                           ;Config register IDLOC7 @ 0x200007
   772                           ;	unspecified, using default values
   773   200007                     	org	2097159
   774   200007  FF                 	db	255
   775                           
   776                           	psect	config
   777                           
   778                           ; Padding undefined space
   779   300000                     	org	3145728
   780   300000  FF                 	db	255
   781                           
   782                           ;Config register CONFIG1H @ 0x300001
   783                           ;	Oscillator Selection bits
   784                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   785                           ;	Fail-Safe Clock Monitor Enable bit
   786                           ;	FCMEN = 0x0, unprogrammed default
   787                           ;	Internal/External Oscillator Switchover bit
   788                           ;	IESO = 0x0, unprogrammed default
   789   300001                     	org	3145729
   790   300001  08                 	db	8
   791                           
   792                           ;Config register CONFIG2L @ 0x300002
   793                           ;	Power-up Timer Enable bit
   794                           ;	PWRT = OFF, PWRT disabled
   795                           ;	Brown-out Reset Enable bits
   796                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
   797                           ;	Brown Out Reset Voltage bits
   798                           ;	BORV = 0x3, unprogrammed default
   799   300002                     	org	3145730
   800   300002  1B                 	db	27
   801                           
   802                           ;Config register CONFIG2H @ 0x300003
   803                           ;	Watchdog Timer Enable bit
   804                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   805                           ;	Watchdog Timer Postscale Select bits
   806                           ;	WDTPS = 0xF, unprogrammed default
   807   300003                     	org	3145731
   808   300003  1E                 	db	30
   809                           
   810                           ; Padding undefined space
   811   300004                     	org	3145732
   812   300004  FF                 	db	255
   813                           
   814                           ;Config register CONFIG3H @ 0x300005
   815                           ;	CCP2 MUX bit
   816                           ;	CCP2MX = 0x1, unprogrammed default
   817                           ;	PORTB A/D Enable bit
   818                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   819                           ;	Low-Power Timer1 Oscillator Enable bit
   820                           ;	LPT1OSC = 0x0, unprogrammed default
   821                           ;	MCLR Pin Enable bit
   822                           ;	MCLRE = 0x1, unprogrammed default
   823   300005                     	org	3145733
   824   300005  81                 	db	129
   825                           
   826                           ;Config register CONFIG4L @ 0x300006
   827                           ;	Stack Full/Underflow Reset Enable bit
   828                           ;	STVREN = 0x1, unprogrammed default
   829                           ;	Single-Supply ICSP Enable bit
   830                           ;	LVP = OFF, Single-Supply ICSP disabled
   831                           ;	Extended Instruction Set Enable bit
   832                           ;	XINST = 0x0, unprogrammed default
   833                           ;	Background Debugger Enable bit
   834                           ;	DEBUG = 0x1, unprogrammed default
   835   300006                     	org	3145734
   836   300006  81                 	db	129
   837                           
   838                           ; Padding undefined space
   839   300007                     	org	3145735
   840   300007  FF                 	db	255
   841                           
   842                           ;Config register CONFIG5L @ 0x300008
   843                           ;	unspecified, using default values
   844                           ;	Code Protection bit
   845                           ;	CP0 = 0x1, unprogrammed default
   846                           ;	Code Protection bit
   847                           ;	CP1 = 0x1, unprogrammed default
   848                           ;	Code Protection bit
   849                           ;	CP2 = 0x1, unprogrammed default
   850                           ;	Code Protection bit
   851                           ;	CP3 = 0x1, unprogrammed default
   852   300008                     	org	3145736
   853   300008  0F                 	db	15
   854                           
   855                           ;Config register CONFIG5H @ 0x300009
   856                           ;	Boot Block Code Protection bit
   857                           ;	CPB = 0x1, unprogrammed default
   858                           ;	Data EEPROM Code Protection bit
   859                           ;	CPD = OFF, Data EEPROM not code-protected
   860   300009                     	org	3145737
   861   300009  C0                 	db	192
   862                           
   863                           ;Config register CONFIG6L @ 0x30000A
   864                           ;	unspecified, using default values
   865                           ;	Write Protection bit
   866                           ;	WRT0 = 0x1, unprogrammed default
   867                           ;	Write Protection bit
   868                           ;	WRT1 = 0x1, unprogrammed default
   869                           ;	Write Protection bit
   870                           ;	WRT2 = 0x1, unprogrammed default
   871                           ;	Write Protection bit
   872                           ;	WRT3 = 0x1, unprogrammed default
   873   30000A                     	org	3145738
   874   30000A  0F                 	db	15
   875                           
   876                           ;Config register CONFIG6H @ 0x30000B
   877                           ;	unspecified, using default values
   878                           ;	Configuration Register Write Protection bit
   879                           ;	WRTC = 0x1, unprogrammed default
   880                           ;	Boot Block Write Protection bit
   881                           ;	WRTB = 0x1, unprogrammed default
   882                           ;	Data EEPROM Write Protection bit
   883                           ;	WRTD = 0x1, unprogrammed default
   884   30000B                     	org	3145739
   885   30000B  E0                 	db	224
   886                           
   887                           ;Config register CONFIG7L @ 0x30000C
   888                           ;	unspecified, using default values
   889                           ;	Table Read Protection bit
   890                           ;	EBTR0 = 0x1, unprogrammed default
   891                           ;	Table Read Protection bit
   892                           ;	EBTR1 = 0x1, unprogrammed default
   893                           ;	Table Read Protection bit
   894                           ;	EBTR2 = 0x1, unprogrammed default
   895                           ;	Table Read Protection bit
   896                           ;	EBTR3 = 0x1, unprogrammed default
   897   30000C                     	org	3145740
   898   30000C  0F                 	db	15
   899                           
   900                           ;Config register CONFIG7H @ 0x30000D
   901                           ;	unspecified, using default values
   902                           ;	Boot Block Table Read Protection bit
   903                           ;	EBTRB = 0x1, unprogrammed default
   904   30000D                     	org	3145741
   905   30000D  40                 	db	64
   906                           tosu	equ	0xFFF
   907                           tosh	equ	0xFFE
   908                           tosl	equ	0xFFD
   909                           stkptr	equ	0xFFC
   910                           pclatu	equ	0xFFB
   911                           pclath	equ	0xFFA
   912                           pcl	equ	0xFF9
   913                           tblptru	equ	0xFF8
   914                           tblptrh	equ	0xFF7
   915                           tblptrl	equ	0xFF6
   916                           tablat	equ	0xFF5
   917                           prodh	equ	0xFF4
   918                           prodl	equ	0xFF3
   919                           indf0	equ	0xFEF
   920                           postinc0	equ	0xFEE
   921                           postdec0	equ	0xFED
   922                           preinc0	equ	0xFEC
   923                           plusw0	equ	0xFEB
   924                           fsr0h	equ	0xFEA
   925                           fsr0l	equ	0xFE9
   926                           wreg	equ	0xFE8
   927                           indf1	equ	0xFE7
   928                           postinc1	equ	0xFE6
   929                           postdec1	equ	0xFE5
   930                           preinc1	equ	0xFE4
   931                           plusw1	equ	0xFE3
   932                           fsr1h	equ	0xFE2
   933                           fsr1l	equ	0xFE1
   934                           bsr	equ	0xFE0
   935                           indf2	equ	0xFDF
   936                           postinc2	equ	0xFDE
   937                           postdec2	equ	0xFDD
   938                           preinc2	equ	0xFDC
   939                           plusw2	equ	0xFDB
   940                           fsr2h	equ	0xFDA
   941                           fsr2l	equ	0xFD9
   942                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        2
    BSS         1
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      8      19
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _H_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0       0
                                              4 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _H_ISR                                                4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _H_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126      8      19     15.1%
BITBIGSFRh          61      0       0      0.0%
BITBIGSFRllh        33      0       0      0.0%
BITBIGSFRlllh       19      0       0      0.0%
BITBIGSFRllll       10      0       0      0.0%
BITBIGSFRlh          1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      19      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Dec 12 00:40:31 2024

                      _A 0609                        _B 0601                       l53 06C4  
                     u70 06D4                       u71 06D0                       u55 0652  
                     u65 0684                      l760 0620                      l752 0612  
                    l770 0642                      l762 0622                      l754 061A  
                    l780 0678                      l772 0644                      l764 063C  
                    l756 061C                      l790 06D4                      l782 0698  
                    l774 0646                      l766 063E                      l758 061E  
                    l792 06E8                      l784 06A0                      l776 0648  
                    l768 0640                      l786 06A2                      l778 064A  
                    l788 06B2                      _now 0005                     _LATB 0F8A  
                   i2l48 07B2                     _main 0612                     btemp 0014  
                   start 000E             ___param_bank 0000                    ?_main 0009  
                  i2l740 0782                    i2l742 0786                    i2l734 0702  
                  i2l744 078E                    i2l736 0752                    i2l746 07AE  
                  i2l738 0760                    i2l748 07B0                    _H_ISR 0008  
                  _TRISB 0F93                    _check 0013                    _index 0007  
                  _value 0003                    tablat 0FF5                    ttemp5 0015  
                  ttemp6 0018                    ttemp7 001C                    status 0FD8  
                  wtemp8 0015          __initialization 07B6             __end_of_main 0700  
                 ??_main 000D            __activetblptr 0001                   ?_H_ISR 0009  
                 _ADRESH 0FC4                   _ADRESL 0FC3                   i2u1_45 070A  
                 i2u2_40 0752                   i2u2_41 074E                   i2u3_40 0782  
                 i2u3_41 077E                   i2u4_45 079A                   isa$std 0001  
           __pdataCOMRAM 0011             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0080  
__end_of__initialization 07D0            ___rparam_used 0001            __end_of_H_ISR 07B6  
         __pcstackCOMRAM 0009                  ??_H_ISR 0009               __pnvCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 07B6                  __ramtop 0600                  __ptext0 0612  
         __pintcode_body 0700     end_of_initialization 07D0                  int_func 0700  
              _TRISAbits 0F92            __pidataCOMRAM 07E2      start_initialization 07B6  
            __pbssCOMRAM 0013                __end_of_A 0611                __end_of_B 0609  
              __pintcode 0008              __smallconst 0600                 _PIE1bits 0F9D  
               _PIR1bits 0F9E                _threshold 0011               _ADCON0bits 0FC2  
             _ADCON1bits 0FC1               _ADCON2bits 0FC0                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600                 _v_before 0001  
               isa$xinst 0000                 int$flags 0014               _INTCONbits 0FF2  
               intlevel2 0000               _OSCCONbits 0FD3  
